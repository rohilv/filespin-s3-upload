{"ast":null,"code":"var _jsxFileName = \"/home/rohil/Downloads/WORK/Filespin.io interview/frontend/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport instance from './axios';\nimport \"./style.css\";\nexport default function App() {\n  //Initializations\n  const GET_URL = 'https://g4hf8fxtfh.execute-api.us-east-2.amazonaws.com/default/getPreSignedUrl'; //API URL goes here\n\n  const [file, setFile] = useState(null);\n  const [uploadDetails, setUploadDetails] = useState({\n    uploadStart: null,\n    uploadEnd: null,\n    fileName: null,\n    fileSize: null\n  }); //Functions\n\n  const onChange = e => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUploadClick = async e => {\n    e.preventDefault(); // Stop form submit\n\n    instance.get(GET_URL).then(response => response.json()).then(res => {\n      console.log(res);\n      setUploadDetails({\n        fileName: file.name,\n        fileSize: file.size\n      });\n      let blobData = new Blob([new Uint8Array(file)], {\n        type: 'image/jpeg'\n      });\n      const requestOptions = {\n        method: 'PUT',\n        mode: 'cors',\n        // no-cors, *cors, same-origin\n        cache: 'no-cache',\n        //credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n          'Content-Type': 'image/jpeg' // 'Content-Type': 'application/x-www-form-urlencoded',\n\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: blobData\n      };\n      instance.put(res.uploadURL, requestOptions).then(response => {\n        console.log(response);\n      }).catch(err => {\n        console.error(err);\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }; // const uploadFileSuccess = async () => {\n  //  const requestOptions = {\n  //       method: 'POST',\n  //       headers: { 'Content-Type': 'application/json' },\n  //       body: JSON.stringify({uploadDetails})\n  //   };\n  //   const response = await fetch(\n  //       'https://jsonplaceholder.typicode.com/posts', requestOptions\n  //     );\n  //   const data = await response.json();\n  //   console.log(data)\n  // }\n\n\n  const FileData = () => {\n    return file ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"File Details:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"File Name: \", file.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, \"File Type: \", file.type), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }\n    }, \"Last Modified: \", file.lastModifiedDate.toDateString())) : /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, \"Choose file & click upload\");\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"File Upload\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUploadClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Upload\")), /*#__PURE__*/React.createElement(FileData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/rohil/Downloads/WORK/Filespin.io interview/frontend/src/App.js"],"names":["React","useState","useEffect","instance","App","GET_URL","file","setFile","uploadDetails","setUploadDetails","uploadStart","uploadEnd","fileName","fileSize","onChange","e","target","files","handleUploadClick","preventDefault","get","then","response","json","res","console","log","name","size","blobData","Blob","Uint8Array","type","requestOptions","method","mode","cache","headers","redirect","referrerPolicy","body","put","uploadURL","catch","err","error","FileData","lastModifiedDate","toDateString"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport instance from './axios';\nimport \"./style.css\";\n\nexport default function App() {\n  \n  //Initializations\n  const GET_URL= 'https://g4hf8fxtfh.execute-api.us-east-2.amazonaws.com/default/getPreSignedUrl'; //API URL goes here\n  \n  const [file, setFile] = useState(null);\n  const [uploadDetails, setUploadDetails] = useState({\n      uploadStart: null, \n      uploadEnd: null,\n      fileName: null,\n      fileSize: null\n    });\n\n  //Functions\n  \n  const onChange = (e) => {\n    setFile(e.target.files[0])\n  }\n\n  const handleUploadClick = async (e) => {\n    e.preventDefault() // Stop form submit\n    instance.get(GET_URL)\n      .then(response => response.json())\n      .then(res => {\n        console.log(res);\n          setUploadDetails({fileName: file.name, fileSize: file.size});\n  \n          let blobData = new Blob([new Uint8Array(file)], {type: 'image/jpeg'})\n          const requestOptions = {\n            method: 'PUT',\n            mode: 'cors', // no-cors, *cors, same-origin\n            cache: 'no-cache',\n            //credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n              'Content-Type': 'image/jpeg'\n              // 'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            redirect: 'follow',\n            referrerPolicy: 'no-referrer',\n            body: blobData\n          }\n          instance.put(res.uploadURL,requestOptions) \n            .then((response)=>{\n              console.log(response);\n            }).catch(err=>{\n              console.error(err)\n            })\n        }\n      )\n      .catch(error => {\n        console.error(error)\n  \n      })\n  }\n\n  // const uploadFileSuccess = async () => {\n  //  const requestOptions = {\n  //       method: 'POST',\n  //       headers: { 'Content-Type': 'application/json' },\n  //       body: JSON.stringify({uploadDetails})\n  //   };\n  //   const response = await fetch(\n  //       'https://jsonplaceholder.typicode.com/posts', requestOptions\n  //     );\n  //   const data = await response.json();\n  //   console.log(data)\n  // }\n\n  const FileData = () => { \n    return file ? \n          <div> \n            <h2>File Details:</h2> \n            <p>File Name: {file.name}</p> \n            <p>File Type: {file.type}</p> \n            <p>Last Modified: {file.lastModifiedDate.toDateString()}</p> \n          </div>\n        : <p>Choose file & click upload</p> \n    };\n\n  return (\n    <div>\n    <h1>File Upload</h1>\n     <form onSubmit={handleUploadClick}>\n        <input type=\"file\" onChange={onChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n      <FileData/>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}