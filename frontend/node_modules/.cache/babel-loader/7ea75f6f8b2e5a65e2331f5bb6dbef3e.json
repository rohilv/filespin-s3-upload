{"ast":null,"code":"var _jsxFileName = \"/home/rohil/Downloads/WORK/Filespin.io interview/frontend/src/DisplayImage.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class DisplayImage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\"\n    };\n\n    this.formHandler = e => {\n      e.preventDefault();\n      this.setState({\n        message: \"Loading...\"\n      });\n      const filename = document.querySelector(\"#filename\").value;\n      const generateGetUrl = \"http://localhost:3500/generate-get-url\";\n      const options = {\n        params: {\n          Key: filename,\n          ContentType: \"image/jpeg\"\n        }\n      };\n      axios.get(generateGetUrl, options).then(res => {\n        const {\n          data: getURL\n        } = res;\n        this.setState({\n          getURL\n        });\n      });\n    };\n\n    this.handleImageLoaded = () => {\n      this.setState({\n        message: \"Done\"\n      });\n    };\n\n    this.handleImageError = () => {\n      this.setState({\n        message: \"Sorry, something went wrong. Please check if the remote file exists.\"\n      });\n    };\n  }\n\n  render() {\n    const {\n      getURL,\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Retrieve Image from AWS S3 Bucket\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.formHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, \" Image name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"filename\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, \"Image name must include the extension, eg. cat.jpeg\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Load\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, message), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preview-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, getURL && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"show-picture\",\n      src: getURL,\n      alt: \"File stored in AWS S3\",\n      onLoad: this.handleImageLoaded,\n      onError: this.handleImageError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/home/rohil/Downloads/WORK/Filespin.io interview/frontend/src/DisplayImage.js"],"names":["React","Component","axios","DisplayImage","state","message","formHandler","e","preventDefault","setState","filename","document","querySelector","value","generateGetUrl","options","params","Key","ContentType","get","then","res","data","getURL","handleImageLoaded","handleImageError","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDG,KADkD,GAC1C;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAD0C;;AAAA,SAGlDC,WAHkD,GAGnCC,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMK,QAAQ,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,EAAoCC,KAArD;AACA,YAAMC,cAAc,GAAG,wCAAvB;AACA,YAAMC,OAAO,GAAG;AACdC,QAAAA,MAAM,EAAE;AACNC,UAAAA,GAAG,EAAEP,QADC;AAENQ,UAAAA,WAAW,EAAE;AAFP;AADM,OAAhB;AAMAhB,MAAAA,KAAK,CAACiB,GAAN,CAAUL,cAAV,EAA0BC,OAA1B,EAAmCK,IAAnC,CAAyCC,GAAD,IAAS;AAC/C,cAAM;AAAEC,UAAAA,IAAI,EAAEC;AAAR,YAAmBF,GAAzB;AACA,aAAKZ,QAAL,CAAc;AAAEc,UAAAA;AAAF,SAAd;AACD,OAHD;AAID,KAlBiD;;AAAA,SAoBlDC,iBApBkD,GAoB9B,MAAM;AACxB,WAAKf,QAAL,CAAc;AAAEJ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACD,KAtBiD;;AAAA,SAwBlDoB,gBAxBkD,GAwB/B,MAAM;AACvB,WAAKhB,QAAL,CAAc;AACZJ,QAAAA,OAAO,EACL;AAFU,OAAd;AAID,KA7BiD;AAAA;;AA+BlDqB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEH,MAAAA,MAAF;AAAUlB,MAAAA;AAAV,QAAsB,KAAKD,KAAjC;AACA,wBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,eAEE;AAAM,MAAA,QAAQ,EAAE,KAAKE,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAO,MAAA,EAAE,EAAC,UAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADF,CAHF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,CAFF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,OAAJ,CAVF,eAWE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkB,MAAM,iBACL,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,EAAE,EAAC,cADL;AAEE,MAAA,GAAG,EAAEA,MAFP;AAGE,MAAA,GAAG,EAAC,uBAHN;AAIE,MAAA,MAAM,EAAE,KAAKC,iBAJf;AAKE,MAAA,OAAO,EAAE,KAAKC,gBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CAFJ,CAXF,CADF;AA6BD;;AA9DiD","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class DisplayImage extends Component {\n  state = { message: \"\" };\n\n  formHandler = (e) => {\n    e.preventDefault();\n    this.setState({ message: \"Loading...\" });\n    const filename = document.querySelector(\"#filename\").value;\n    const generateGetUrl = \"http://localhost:3500/generate-get-url\";\n    const options = {\n      params: {\n        Key: filename,\n        ContentType: \"image/jpeg\",\n      },\n    };\n    axios.get(generateGetUrl, options).then((res) => {\n      const { data: getURL } = res;\n      this.setState({ getURL });\n    });\n  };\n\n  handleImageLoaded = () => {\n    this.setState({ message: \"Done\" });\n  };\n\n  handleImageError = () => {\n    this.setState({\n      message:\n        \"Sorry, something went wrong. Please check if the remote file exists.\",\n    });\n  };\n\n  render() {\n    const { getURL, message } = this.state;\n    return (\n      <React.Fragment>\n        <h1>Retrieve Image from AWS S3 Bucket</h1>\n        <form onSubmit={this.formHandler}>\n          <label> Image name:</label>\n          <input id='filename' />\n          <p>\n            <i>Image name must include the extension, eg. cat.jpeg</i>\n          </p>\n          <button>Load</button>\n        </form>\n        <p>{message}</p>\n        <div className='preview-container'>\n          {getURL && (\n            <React.Fragment>\n              <div className='preview'>\n                <img\n                  id='show-picture'\n                  src={getURL}\n                  alt='File stored in AWS S3'\n                  onLoad={this.handleImageLoaded}\n                  onError={this.handleImageError}\n                />\n              </div>\n            </React.Fragment>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}