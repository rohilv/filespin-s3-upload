{"ast":null,"code":"var _jsxFileName = \"/home/rohil/Downloads/WORK/Filespin.io interview/frontend/src/Uploader.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nexport default class Uploader extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      message: \"\"\n    };\n\n    this.getImage = e => {\n      const files = e.target.files;\n\n      if (files && files.length > 0) {\n        const file = files[0];\n        this.setState({\n          file\n        });\n      }\n    };\n\n    this.uploadFile = e => {\n      e.preventDefault();\n      const {\n        file\n      } = this.state;\n      this.setState({\n        message: \"Uploading...\"\n      });\n      const contentType = file.type; // eg. image/jpeg or image/svg+xml\n\n      const generatePutUrl = \"http://localhost:3500/generate-put-url\";\n      const options = {\n        params: {\n          Key: file.name,\n          ContentType: contentType\n        },\n        headers: {\n          \"Content-Type\": contentType\n        }\n      };\n      axios.get(generatePutUrl, options).then(res => {\n        const {\n          data: {\n            putURL\n          }\n        } = res;\n        axios.put(putURL, file, options).then(res => {\n          this.setState({\n            message: \"Upload Successful\"\n          });\n          setTimeout(() => {\n            this.setState({\n              message: \"\"\n            });\n            document.querySelector(\"#upload-image\").value = \"\";\n          }, 2000);\n        }).catch(err => {\n          this.setState({\n            message: \"Sorry, something went wrong\"\n          });\n          console.log(\"err\", err);\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, \"Upload an image to AWS S3 bucket\"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"upload-image\",\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: this.getImage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, this.state.message), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.uploadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      id: \"file-upload-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"Upload\")));\n  }\n\n}","map":{"version":3,"sources":["/home/rohil/Downloads/WORK/Filespin.io interview/frontend/src/Uploader.js"],"names":["React","Component","axios","Uploader","state","message","getImage","e","files","target","length","file","setState","uploadFile","preventDefault","contentType","type","generatePutUrl","options","params","Key","name","ContentType","headers","get","then","res","data","putURL","put","setTimeout","document","querySelector","value","catch","err","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nexport default class Uploader extends Component {\n  state = {\n    message: \"\",\n  };\n\n  getImage = (e) => {\n    const files = e.target.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      this.setState({ file });\n    }\n  };\n\n  uploadFile = (e) => {\n    e.preventDefault();\n    const { file } = this.state;\n    this.setState({ message: \"Uploading...\" });\n    const contentType = file.type; // eg. image/jpeg or image/svg+xml\n\n    const generatePutUrl = \"http://localhost:3500/generate-put-url\";\n    const options = {\n      params: {\n        Key: file.name,\n        ContentType: contentType,\n      },\n      headers: {\n        \"Content-Type\": contentType,\n      },\n    };\n\n    axios.get(generatePutUrl, options).then((res) => {\n      const {\n        data: { putURL },\n      } = res;\n      axios\n        .put(putURL, file, options)\n        .then((res) => {\n          this.setState({ message: \"Upload Successful\" });\n          setTimeout(() => {\n            this.setState({ message: \"\" });\n            document.querySelector(\"#upload-image\").value = \"\";\n          }, 2000);\n        })\n        .catch((err) => {\n          this.setState({ message: \"Sorry, something went wrong\" });\n          console.log(\"err\", err);\n        });\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <h1>Upload an image to AWS S3 bucket</h1>\n        <input\n          id='upload-image'\n          type='file'\n          accept='image/*'\n          onChange={this.getImage}\n        />\n        <p>{this.state.message}</p>\n        <form onSubmit={this.uploadFile}>\n          <button id='file-upload-button'>Upload</button>\n        </form>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}